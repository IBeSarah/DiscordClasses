name: Comment Class Diff

on:
  push:
    branches:
      - main
    paths:
      - discordclasses.json   # Only trigger when this file changes

jobs:
  post-diff:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Needed to compare with previous commit

      - name: Set up JSON files
        run: |
          git show HEAD:discordclasses.json > current.json || echo '{}' > current.json
          git show HEAD^:discordclasses.json > previous.json || echo '{}' > previous.json

      - name: Install Node dependencies
        run: npm install lodash fast-levenshtein axios

      - name: Run diff and post to Discord
        run: node diff_and_post.js
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SERVER_URL: ${{ github.server_url }}

      - name: Post full diff as GitHub commit comments
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const MAX = 65000;
            const raw = fs.readFileSync('full_diff.txt', 'utf8');

            if (!raw.trim() || /No class changes detected/i.test(raw)) {
              console.log('No diff to post');
              return;
            }

            // Convert all headings ### to H1 #
            const replaced = raw.replace(/^### /gm, '# ');

            // Split on headings "# " to avoid breaking diff fences
            const sections = replaced.split(/\n(?=# )/g);

            const chunks = [];
            let buf = '';
            for (const sec of sections) {
              if ((buf + sec + '\n').length > MAX) {
                if (buf.trim()) chunks.push(buf);
                buf = '';
              }
              buf += sec + '\n';
            }
            if (buf.trim()) chunks.push(buf);

            for (let i = 0; i < chunks.length; i++) {
              const header = chunks.length > 1 ? `**Part ${i+1} of ${chunks.length}**\n\n` : '';
              await github.rest.repos.createCommitComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: context.sha,
                body: header + chunks[i],
              });
              console.log(`Posted GitHub comment part ${i+1}/${chunks.length}`);
            }
