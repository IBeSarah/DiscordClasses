name: Comment Class Diff

on:
  push:
    branches:
      - main
    paths:
      - discordclasses.json   # Only trigger when this file changes

jobs:
  comment-diff:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Needed to compare with previous commit

      - name: Set up JSON files
        run: |
          git show HEAD:discordclasses.json > current.json || echo '{}' > current.json
          git show HEAD^:discordclasses.json > previous.json || echo '{}' > previous.json

      - name: Install Node dependencies
        run: npm install lodash fast-levenshtein axios

      - name: Post diff to Discord
        run: node diff_and_post_discord.js
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SERVER_URL: ${{ github.server_url }}

      - name: Create full JSON diff
        run: |
          node -e "
          const fs = require('fs');
          const prev = JSON.parse(fs.readFileSync('previous.json'));
          const curr = JSON.parse(fs.readFileSync('current.json'));
          const diff = require('util').inspect({ previous: prev, current: curr }, { depth: null, colors: false });
          fs.writeFileSync('full_diff.txt', diff);
          "

      - name: Post full diff as GitHub commit comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const MAX_COMMENT_LENGTH = 65536;

            const diff = fs.readFileSync('full_diff.txt', 'utf8');
            if (!diff.trim()) {
              console.log("No diff to post");
              return;
            }

            function splitDiff(fullText, maxLength) {
              const chunks = [];
              let start = 0;
              while (start < fullText.length) {
                chunks.push(fullText.slice(start, start + maxLength));
                start += maxLength;
              }
              return chunks;
            }

            const chunks = splitDiff(diff, MAX_COMMENT_LENGTH);

            for (let i = 0; i < chunks.length; i++) {
              const commentBody = chunks.length > 1
                ? `**Part ${i+1} of ${chunks.length}**\n\n` + '```diff\n' + chunks[i] + '\n```'
                : '```diff\n' + chunks[i] + '\n```';

              await github.rest.repos.createCommitComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: context.sha,
                body: commentBody,
              });

              console.log(`Posted GitHub comment part ${i + 1}/${chunks.length}`);
            }
